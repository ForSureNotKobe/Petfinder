// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Petfinder.Models;

namespace Petfinder.Migrations
{
    [DbContext(typeof(PetfinderContext))]
    [Migration("20210420232248_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Petfinder.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Petfinder.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Origins")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShelterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PetId");

                    b.HasIndex("AdminId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Petfinder.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Petfinder.Models.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingId");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Petfinder.Models.Shelter", b =>
                {
                    b.Property<int>("ShelterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Localization")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ShelterId");

                    b.HasIndex("AdminId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Petfinder.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("AdminId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Petfinder.Models.Vet", b =>
                {
                    b.Property<int>("VetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("VetId");

                    b.HasIndex("AdminId");

                    b.ToTable("Vets");
                });

            modelBuilder.Entity("Petfinder.Models.Pet", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Pets")
                        .HasForeignKey("AdminId");

                    b.HasOne("Petfinder.Models.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Petfinder.Models.Post", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Posts")
                        .HasForeignKey("AdminId");

                    b.HasOne("Petfinder.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Petfinder.Models.Ratings", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Ratings")
                        .HasForeignKey("AdminId");

                    b.HasOne("Petfinder.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Petfinder.Models.Vet", "Vet")
                        .WithMany("Ratings")
                        .HasForeignKey("VetId");

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Petfinder.Models.Shelter", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Shelters")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("Petfinder.Models.User", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Users")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("Petfinder.Models.Vet", b =>
                {
                    b.HasOne("Petfinder.Models.Admin", null)
                        .WithMany("Vets")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("Petfinder.Models.Admin", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("Posts");

                    b.Navigation("Ratings");

                    b.Navigation("Shelters");

                    b.Navigation("Users");

                    b.Navigation("Vets");
                });

            modelBuilder.Entity("Petfinder.Models.Shelter", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Petfinder.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Petfinder.Models.Vet", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
